{"version":3,"sources":["components/Jumbotron/Jumbotron.js","components/Container/Container.js","components/Row/Row.js","components/Footer/Footer.js","App.jsx","index.js"],"names":["Jumbotron","react_default","a","createElement","className","Container","props","children","Row","Footer","images","id","url","clicked","App","state","score","topScore","guessed","shuffleArray","array","i","length","j","Math","floor","random","_ref","handleImageClick","console","log","_this","find","img","resetGame","continueGame","newArray","setState","clickedImage","newImages","pictures","map","each","_this2","this","Fragment","href","components_Jumbotron_Jumbotron","components_Container_Container","components_Row_Row","key","onClick","src","alt","components_Footer_Footer","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5558f51a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Jumbotron.css\";\n\nconst Jumbotron = () => {\n\n    return (\n        <div className=\"jumbotron jumbotron-fluid bg-image text-light\">\n            <div className=\"col-12 text-center\">\n            <div className=\"display-3 bolder\">Welcome to the Clicky Game!</div><br></br>\n            <h4>\n                This is a memory game. You have to click on one image at a time.\n                Each time you click on a new image, you will gain one point. \n                If you click on an image you already clicked on, you will lose. \n                The goal is to click on all 16 images only once!\n            </h4>\n            <h4>Good Luck!</h4>\n            </div>\n        </div>\n    )\n}\n\nexport default Jumbotron;","import React from \"react\";\n\nconst Container = props => <div className=\"container\">{props.children}</div>;\n\nexport default Container;","import React from \"react\";\n\nconst Row = props => <div className=\"row\">{props.children}</div>;\n\nexport default Row;","import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer mt-5 py-3 text-center\">\n            <h4>Clicky Game</h4>\n        </footer>\n    );\n};\n\nexport default Footer;","import React from \"react\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Container from \"./components/Container\";\nimport Row from \"./components/Row\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\n\n\nvar images = [\n    {\n        id: 1,\n        url: \"https://images.unsplash.com/photo-1559440165-f4c2c11f435b?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n        clicked: false\n    },\n    {\n        id: 2,\n        url: \"https://images.unsplash.com/photo-1559526971-55f629b0b760?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\n        clicked: false\n    },\n    {\n        id: 3,\n        url: \"https://images.unsplash.com/photo-1554263022-02df49e88f7d?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n        clicked: false\n    },\n    {\n        id: 4,\n        url: \"https://images.unsplash.com/photo-1559564207-09c99dc78a70?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\n        clicked: false\n    },\n    {\n        id: 5,\n        url: \"https://images.unsplash.com/photo-1559403053-900e0c4abc8c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\n        clicked: false\n    },\n    {\n        id: 6,\n        url: \"https://images.unsplash.com/photo-1559157693-c34156e0f8c3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\n        clicked: false\n    },\n    {\n        id: 7,\n        url: \"https://images.unsplash.com/photo-1558754211-d78f781115b5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\n        clicked: false\n    },\n    {\n        id: 8,\n        url: \"https://images.unsplash.com/photo-1557962677-131278db2213?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\n        clicked: false\n    },\n    {\n        id: 9,\n        url: \"https://images.unsplash.com/photo-1557978556-b33c86cbeeae?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\n        clicked: false\n    },\n    {\n        id: 10,\n        url: \"https://images.unsplash.com/photo-1557312309-a08700b45135?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\n        clicked: false\n    },\n    {\n        id: 11,\n        url: \"https://images.unsplash.com/flagged/photo-1557650454-65194af63bf9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\n        clicked: false\n    },\n    {\n        id: 12,\n        url: \"https://images.unsplash.com/photo-1446730853965-62433e868929?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\n        clicked: false\n    },\n    {\n        id: 13,\n        url: \"https://images.unsplash.com/photo-1491193348662-47874a96c621?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\n        clicked: false\n    },\n    {\n        id: 14,\n        url: \"https://images.unsplash.com/photo-1430026996702-608b84ce9281?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\n        clicked: false\n    },\n    {\n        id: 15,\n        url: \"https://images.unsplash.com/photo-1425082661705-1834bfd09dca?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\n        clicked: false\n    },\n    {\n        id: 16,\n        url: \"https://images.unsplash.com/flagged/photo-1551337192-c7893e023548?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=400&q=60\",\n        clicked: false\n    }\n];\n\nclass App extends React.Component {\n\n    //set state values\n    state = {\n        score: 0,\n        topScore: 0,\n        images: images,\n        guessed: \"\"\n\n    };\n\n    //function to shuffle array\n    shuffleArray = (array) => {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n        return array;\n    };\n\n    //function for when image is clicked.\n    handleImageClick = (id) => {\n        \n        //check id\n        console.log(id);\n\n        //grab image clicked\n        let imageClicked = this.state.images.find(img => img.id === id);\n\n        //decide which operation to do depending on if the image clicked is true or false\n        //true: reset game    ,   false: continue\n        imageClicked.clicked ? this.resetGame() : this.continueGame(id);\n        \n        //grab new array that is shuffled from old array\n        let newArray = this.shuffleArray(this.state.images);\n\n        //set the state to the new shuffled array\n        this.setState({\n            images: newArray\n        });\n\n    };\n\n    continueGame = (id) => {\n\n        //set score state to one higher\n        this.setState({\n            score: this.state.score + 1\n        });\n\n          //set new high score if higher\n          if (this.state.score >= this.state.topScore) {\n            this.setState({\n                topScore: this.state.score + 1\n            });\n        };\n\n        // grab the images from array as a new array to send back with updates\n        let clickedImage = this.state.images;\n\n        // grab the img of the id clicked\n        let imgId = clickedImage.find(img => img.id === id);\n\n        //switch the clicked value to true of that image\n        imgId.clicked = true;\n\n        // set state of that image clicked to true\n        this.setState({\n            images: clickedImage,\n            guessed: \"You guessed correctly!\"\n        });\n    };\n\n    //function to reset game\n    resetGame = () => {\n\n        //shake the div containing all \n        // $(\".images-grid\").effect(\"shake\");\n\n        //reset score to zero\n        this.setState({\n            score: 0\n        });\n\n        //reset all images to have clicked status of false\n        let newImages = this.state.pictures;\n        this.state.images.map(each => (\n            each.clicked = false\n        ));\n\n        //set state to new images \n        this.setState({\n            images: newImages,\n            guessed: \"You guessed incorrectly! New Game!\"\n        });\n        \n    };\n\n    // react component lifecycle method\n    render(){\n        return(\n            //fragment container\n            <>\n\n                {/* Navbar containing score */}\n                <nav className=\"navbar navbar-expand-lg sticky-top navbar-dark bg-info\">\n                    <div className=\"col\">\n                        <a className=\"navbar-brand\" href=\"/\">Clicky Game</a>\n                    </div>\n                    <div className=\"col text-center text-danger\">\n                        <h3>{this.state.guessed}</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                        <span className=\"font-score text-light\">\n                            <h3>Score: <span id=\"score\">{this.state.score}</span> | Top Score: <span id=\"top-score\">{this.state.topScore}</span></h3>\n                        </span>\n                    </div>\n                </nav>\n   \n                {/* Jumbotron for main header and instructions */}\n                <Jumbotron></Jumbotron>\n\n                {/* Main content display of cards */}\n                <Container>\n                    <Row>\n\n                       {/* @#$@#$@#$#@$  Ask how to make images show in rows*/}\n                        <div className=\"images-grid center\">\n\n                            {/* Loop through all images in array and display each one */}\n                            {this.state.images.map(each => {\n                                return <div key={each.id} className=\"card\">\n                                        <img onClick={() => this.handleImageClick(each.id)} src={each.url} alt=\"\"/>\n                                    </div>\n                            })}\n                        </div>\n\n                    </Row>\n                </Container>\n\n                {/* Footer */}\n                <Footer></Footer>\n\n            </>\n        )\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}